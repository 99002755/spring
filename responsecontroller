package com.institute.controllers;

import java.net.http.HttpHeaders;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.institute.exceptions.InstituteNotFoundException;
import com.institute.model.Institute;
import com.institute.service.InstituteService;

@RestController
@RequestMapping("/institute-api")
public class InstituteResponseController {

	private static final Object InstituteList = null;
	@Autowired
	InstituteService instituteService;
	private Integer year;
	@PostMapping("/institute")
	 ResponseEntity<Institute> addInstitute(@RequestBody Institute institute)
	 {
		Institute nInstitute=instituteService.addInstitute(institute);
		return ResponseEntity.ok(nInstitute);
	 }
	@DeleteMapping("/institute/delete-one/{instituteid}")
	ResponseEntity<Void> deleteInstitute(@PathVariable("instituteid")  Integer instituteid) throws InstituteNotFoundException
	 {
		instituteService.deleteInstituteById(instituteid);
		 return ResponseEntity.status(HttpStatus.OK).build();
	 }
	@GetMapping("/institute/get-one/{instituteid}")
	ResponseEntity<Institute> getInstituteById(@PathVariable("instituteid") Integer instituteid) throws InstituteNotFoundException
	 {
		Institute nInstitute=instituteService.getInstituteById(instituteid);
		HttpHeaders header=new HttpHeaders();
		header.add("desc", "Getting Institute By Id");
		header.add("title", "One Institute");
		return ResponseEntity.status(HttpStatus.OK).headers(header).body(nInstitute);
	 }
	
	 @GetMapping("/institute")
	 ResponseEntity<List<Institute>> getAllPlayers()
	 {
		 List<Institute> instituteList=instituteService.getAllInstitute();
		 return ResponseEntity.ok(instituteList);
	 }
	 @GetMapping("/institute/instituteState/{instituteState}")
	 ResponseEntity<Object> getInstitutetbyState(@PathVariable("instituteState")String instituteState) throws InstituteNotFoundException{
	        List<Institute> instituteList =   instituteService.getInstituteByState(instituteState);
	        return ResponseEntity.ok(InstituteList);
	    }
	 @GetMapping("/institute/year/{year}")
	 ResponseEntity<Object> getInstitutebyYear(@PathVariable("year")Integer page)throws InstituteNotFoundException{
	        List<Institute> instituteList = instituteService.findInstituteByYear(year);    
	        return ResponseEntity.ok(InstituteList);
	    }
	@GetMapping("/institute/faculty/{facultyname}")
	 public ResponseEntity<List<Institute>> findFacultyByFacultyName(@PathVariable("facultyname")String facultyname) {
	        List<Institute> instituteList = instituteService.getInstituteByFacultyName(facultyname);
	        return ResponseEntity.ok(instituteList);
	        
	    }
}
